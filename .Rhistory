dt_datosPais <- dt_datos[iso2c == pais, c("year","iso2c" , "NY.GNP.PCAP.CD"), with = FALSE]
print("dt_datosPais")
print(dt_datosPais)
dt_datosPais.MA3 <- media_movil(argNombrePais = pais,
argData = dt_datosPais$NY.GNP.PCAP.CD,
argMuestras = 3)
dt_datosPais.MA5 <- media_movil(argNombrePais = pais,
argData = dt_datosPais$NY.GNP.PCAP.CD,
argMuestras = 5)
print("dt_datosPais.MA5")
print(dt_datosPais.MA5)
l <- list(datos_grafico , dt_datosPais.MA3 , dt_datosPais.MA5)
datos_grafico <- rbindlist(l)
print("datos_grafico")
print(datos_grafico)
}
##junto los datos originales con las medias para luego graficarlas
#l = list(dt_datos , dt_datos.MA3 , dt_datos.MA5)
#datos_grafico <- rbindlist(l)
# grafico de original con medias moviles
g <- ggplot(data = datos_grafico , aes(x = year, y = NY.GNP.PCAP.CD, color = iso2c))
g +
geom_line() +
xlab('Year') +
ylab('GDI per capita (Atlas Method USD)') +
labs(title = "GNI Per Capita ($USD Atlas Method)")
######################################################################
### correlacion entre las series de tiempo
combinatorias <- t(combn(paises, 2))
combinatorias <- lapply(1:nrow(combinatorias), function(i) combinatorias[i,])
datos_grafico <- NULL
for (comb in combinatorias) {
print(comb)
convolucion = convolve(dt_datos[iso2c==comb[1],NY.GNP.PCAP.CD] ,
dt_datos[iso2c==comb[2],NY.GNP.PCAP.CD] ,
conj = TRUE)
dt_datos.conv <- data.table(
year = num_anios,
iso2c = paste("CORR" , comb[1] , comb[2] , sep = "_"),
NY.GNP.PCAP.CD = convolucion
)
l = list(datos_grafico , dt_datos.conv)
datos_grafico <- rbindlist(l)
}
#g <- ggplot(subset(datos_grafico,iso2c=="CORR_AR"),aes(x = year, y = NY.GNP.PCAP.CD,dt_datos.CORR,  color = iso2c))
g <- ggplot(datos_grafico, aes(x = year, y = NY.GNP.PCAP.CD,dt_datos.CORR,  color = iso2c))
g +
geom_line() +
xlab('Year') +
ylab('GDI per capita (Atlas Method USD)') +
labs(title = "GNI Per Capita ($USD Atlas Method)")
######################################################################
### correlacion cruzada
par(mfrow=c(3,2))
for (comb in combinatorias) {
ccf(dt_datos[iso2c==comb[1],NY.GNP.PCAP.CD] ,
dt_datos[iso2c==comb[2],NY.GNP.PCAP.CD] ,
ylab = "cross-correlation",
main = paste ("ccf",comb[1],comb[2])
)
}
Sys.setenv(http_proxy = 'http://10.1.103.240:3128')
Sys.setenv(https_proxy = 'http://10.1.103.240:3128')
setwd("/run/media/jp/LIVE/DM/71_ST/proyectos/WorlBank/git/uba_st/")
library(WDI)
library(data.table)
library(ggplot2)
filtro_paises <- "all"
desde <- 1980
hasta <- 2016
dat = WDI(indicator='NY.GDP.PCAP.KD' ,
country= filtro_paises ,
start= desde ,
end=hasta
)
head(dat)
tail(dat)
write.csv(dat,"dataset_all.csv")
setwd("/run/media/jp/LIVE/DM/71_ST/proyectos/WorlBank/git/uba_st")
library(data.table)
library(ggplot2)
dat <- read.csv("dataset_all.csv")
dat
dt_datos <- as.data.table(dat)
dat$ID<-1:nrow(dt_datos)
library(doBy)
install.packages("doBy")
library("doBy")
summaryBy(NY.GDP.PCAP.KD, year~iso2c, data=dat, FUN=c(scale))
dat
head(dat)
summaryBy(NY.GDP.PCAP.KD, year~iso2c, data=dat, FUN=c(scale))
summaryBy(NY.GDP.PCAP.KD, year~iso2c, data=dat, FUN=c(scale))
dat <- read.csv("dataset_all.csv")
dt_datos <- as.data.table(dat)
dt_datos <- dt_datos[NY.GDP.PCAP.KD != 'NA']
setkey(dt_datos,year)
summaryBy(NY.GDP.PCAP.KD, year~iso2c, data=dt_datos, FUN=c(scale))
escalado <- function(x) {
z=(x-mean(x,na.rm=TRUE))/sd(x,na.rm = TRUE)
return(z)
}
fun_escalado <- function(x) {
z=(x-mean(x,na.rm=TRUE))/sd(x,na.rm = TRUE)
return(z)
}
dt[,list(value=NY.GDP.PCAP.KD, escalado=fun_escalado(NY.GDP.PCAP.KD)),by="iso2c"]
dt_datos[,list(value=NY.GDP.PCAP.KD, escalado=fun_escalado(NY.GDP.PCAP.KD)),by="iso2c"]
dt_datos
dt_datos_escalados <- dt_datos[,list(value=NY.GDP.PCAP.KD, escalado=fun_escalado(NY.GDP.PCAP.KD)),by="iso2c"]
head(dt_datos)
head(dt_datos_escalados)
head(dt_datos,10)
head(dt_datos_escalados,10)
dt_datos[1:10,]
dt_datos[1:10,]
dt_datos_escalados[1:10,]
dt_datos_escalados <- dt_datos[,list(value=NY.GDP.PCAP.KD, escalado=fun_escalado(NY.GDP.PCAP.KD), year=year),by="iso2c"]
dt_datos[1:10,]
dt_datos_escalados[1:10,]
dt_datos[1:10,order(iso2c)]
dt_datos[1:10,order(iso2c),with=NULL]
dt_datos[1:10,]
dt_datos[order(iso2c)]
dt_datos_escalados[order(iso2c)]
head(dt_datos[order(iso2c)], 10)
head(dt_datos[order(iso2c)], 20)
head(dt_datos[order(iso2c)], 30)
dt_datos_escalados[order(iso2c), 40]
head(dt_datos_escalados[order(iso2c)], 30)
head(dt_datos_escalados[order(iso2c)], 40)
dt_datos[]
dt_datos[iso2c=="AR"]
dt_datos_escalados[iso2c=="AR"]
datos_grafico <- dt_datos_escalados[iso2c=="AR"]
g <- ggplot(data = datos_grafico , aes(x = year, y = NY.GDP.PCAP.KD, color = iso2c))
g +
geom_line() +
xlab('Year') +
ylab('GDI per capita (Atlas Method USD)') +
labs(title = "GNI Per Capita ($USD Atlas Method)")
g <- ggplot(data = datos_grafico , aes(x = year, y = value, color = iso2c))
g +
geom_line() +
xlab('Year') +
ylab('GDI per capita (Atlas Method USD)') +
labs(title = "GNI Per Capita ($USD Atlas Method)")
g <- ggplot(data = datos_grafico , aes(x = year, y = c(value,escalado), color = iso2c))
g +
geom_line() +
xlab('Year') +
ylab('GDI per capita (Atlas Method USD)') +
labs(title = "GNI Per Capita ($USD Atlas Method)")
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value))+geom_point(color="firebrick")
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado))+geom_point(color="olivedrab")
library(grid)
pushViewport(viewport(layout = grid.layout(1, 2)))
print(myplot1, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(myplot2, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
library(gridExtra)
install.packages("gridExtra")
library("gridExtra")
grid.arrange(myplot1, myplot2, ncol=2)
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value))+geom_point(color="red")
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado))+geom_point(color="green")
# alternative, a little easier
install.packages("gridExtra")
library("gridExtra")
grid.arrange(myplot1, myplot2, ncol=2)
grid.arrange(myplot1, myplot2, ncol=2)
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado))+geom_point(color="blue")
grid.arrange(myplot1, myplot2, ncol=2)
dt_datos_escalados[iso2c=="AR" || iso2c=="BR"]
dt_datos_escalados[iso2c==c("AR","BR")]
dt_datos_escalados[iso2c=="AR"|iso2c=="BR"]
datos_grafico <- dt_datos_escalados[iso2c=="AR"|iso2c=="BR"]
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value))+geom_point(color="red")
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado))+geom_point(color="blue")
grid.arrange(myplot1, myplot2, ncol=2)
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value, color=iso2c))
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado, color=iso2c))
grid.arrange(myplot1, myplot2, ncol=2)
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value, color = iso2c))
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado, color = iso2c))
grid.arrange(myplot1, myplot2, ncol=2)
datos_grafico
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value, color = iso2c))
grid.arrange(myplot1, myplot2, ncol=2)
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value, color = iso2c))
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado, color = iso2c))
pushViewport(viewport(layout = grid.layout(1, 2)))
print(myplot1, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(myplot2, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value))+geom_point(color=iso2c)
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado))+geom_point(color=iso2c)
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value, color = iso2c))
pushViewport(viewport(layout = grid.layout(1, 2)))
print(myplot1, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value))
pushViewport(viewport(layout = grid.layout(1, 2)))
print(myplot1, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
datos_grafico <- dt_datos_escalados[iso2c=="AR"]
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value))+geom_point(color="red")
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado))+geom_point(color="blue")
grid.arrange(myplot1, myplot2, ncol=2)
datos_grafico
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value, color = iso2c))+geom_point(color="red")
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado, , color = iso2c))+geom_point(color="blue")
grid.arrange(myplot1, myplot2, ncol=2)
datos_grafico <- dt_datos_escalados[iso2c=="AR"|iso2c=="BR"]
datos_grafico
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value, color = iso2c))+geom_point(color="red")
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado, , color = iso2c))+geom_point(color="blue")
grid.arrange(myplot1, myplot2, ncol=2)
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value, color = iso2c))+geom_point(color=iso2c)
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado, , color = iso2c))+geom_point(color=iso2c)
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value, color = iso2c))+geom_point(color=iso2c)
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado, , color = iso2c))+geom_point(color=iso2c)
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value, color = iso2c))
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado, , color = iso2c))
grid.arrange(myplot1, myplot2, ncol=2)
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value))
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado ))
grid.arrange(myplot1, myplot2, ncol=2)
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value))+geom_point(color="red")
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado ))+geom_point(color="blue")
grid.arrange(myplot1, myplot2, ncol=2)
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value))+geom_line(color="red")
grid.arrange(myplot1, myplot2, ncol=2)
myplot1 <- ggplot(data = datos_grafico , aes(x = year, color = iso2c))
myplot1 +
geom_line() +
xlab('Year') +
ylab('') +
labs(title = "")
myplot1 <- ggplot(data = datos_grafico , aes(x = year, color = iso2c, color = iso2c))
myplot1 +
geom_line() +
xlab('Year') +
ylab('') +
labs(title = "")
myplot1 <- ggplot(data = datos_grafico , aes(x = year, color = iso2c))
myplot1 +
geom_line() +
xlab('Year') +
ylab('') +
labs(title = "")
myplot1 <- ggplot(data = datos_grafico , aes(x = year, color = iso2c))
myplot1 +
geom_line() +
xlab('X') +
ylab('Y') +
labs(title = 'Title')
datos_grafico
myplot1 <- ggplot(data = datos_grafico , aes(x = year, color = iso2c))
myplot1 +
geom_line() +
xlab('X') +
ylab('Y') +
labs(title = 'Title')
dt_datos_escalados[iso2c=="AR"]
datos_grafico <- dt_datos_escalados[iso2c=="AR"]
myplot1 <- ggplot(data = datos_grafico , aes(x = year, color = iso2c))
myplot1 +
geom_line() +
xlab('X') +
ylab('Y') +
labs(title = 'Title')
myplot1 <- ggplot(data = datos_grafico , aes(x = year))
myplot1 +
geom_line() +
xlab('X') +
ylab('Y') +
labs(title = 'Title')
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value, color = iso2c))
myplot1 +
geom_line() +
xlab('X') +
ylab('Y') +
labs(title = 'Title')
datos_grafico <- dt_datos_escalados[iso2c=="AR"|iso2c=="BR"]
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value, color = iso2c))
myplot1 +
geom_line() +
xlab('X') +
ylab('Y') +
labs(title = 'Title')
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value, color = iso2c))+geom_line()
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado, color = iso2c))+geom_line()
grid.arrange(myplot1, myplot2, ncol=2)
datos_grafico <- dt_datos_escalados[iso2c=="AR"|iso2c=="BR"|iso2c=="CL"]
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value, color = iso2c))+geom_line()
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado, color = iso2c))+geom_line()
grid.arrange(myplot1, myplot2, ncol=2)
setwd("/run/media/jp/LIVE/DM/71_ST/proyectos/WorlBank/git/uba_st")
library(data.table)
library(ggplot2)
dat <- read.csv("dataset_all.csv")
dt_datos <- as.data.table(dat)
# saco los registros nulos
dt_datos <- dt_datos[NY.GDP.PCAP.KD != 'NA']
setkey(dt_datos,year)
fun_escalado <- function(x) {
z=(x-mean(x,na.rm=TRUE))/sd(x,na.rm = TRUE)
return(z)
}
dt_datos_escalados <- dt_datos[,list(value=NY.GDP.PCAP.KD, escalado=fun_escalado(NY.GDP.PCAP.KD), year=year),by="iso2c"]
#head(dt_datos[order(iso2c)], 30)
#head(dt_datos_escalados[order(iso2c)], 40)
datos_grafico <- dt_datos_escalados[iso2c=="AR"|iso2c=="BR"|iso2c=="CL"]
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value, color = iso2c))+geom_line()
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado, color = iso2c))+geom_line()
library("gridExtra")
grid.arrange(myplot1, myplot2, ncol=2)
Sys.setenv(http_proxy = 'http://10.1.103.240:3128')
Sys.setenv(https_proxy = 'http://10.1.103.240:3128')
setwd("/run/media/jp/LIVE/DM/71_ST/proyectos/WorlBank/git/uba_st")
library(data.table)
library(ggplot2)
dat <- read.csv("dataset_all.csv")
dt_datos <- as.data.table(dat)
# saco los registros nulos
dt_datos <- dt_datos[NY.GDP.PCAP.KD != 'NA']
setkey(dt_datos,year)
fun_escalado <- function(x) {
z=(x-mean(x,na.rm=TRUE))/sd(x,na.rm = TRUE)
return(z)
}
dt_datos_escalados <- dt_datos[,list(value=NY.GDP.PCAP.KD, escalado=fun_escalado(NY.GDP.PCAP.KD), year=year),by="iso2c"]
write.csv(dt_datos_escalados, "dataset_all_escalados.csv")
datos_grafico <- dt_datos_escalados[iso2c=="AR"|iso2c=="BR"|iso2c=="CL"]
myplot1 <- ggplot(data = datos_grafico , aes(x = year, y = value, color = iso2c))+geom_line()
myplot2 <- ggplot(data = datos_grafico , aes(x = year, y = escalado, color = iso2c))+geom_line()
#install.packages("gridExtra")
library("gridExtra")
grid.arrange(myplot1, myplot2, ncol=2)
paises <- dt_datos[,iso2c,by=iso2c]$iso2c
paises
paises <- c("AR","BR","CL")
combinatorias <- t(combn(paises, 2))
combinatorias
combinatorias <- lapply(1:nrow(combinatorias), function(i) combinatorias[i,])
combinatorias
datos_grafico <- NULL
datos_grafico <- dt_datos_escalados[iso2c=="AR"|iso2c=="BR"|iso2c=="CL"]
for (comb in combinatorias[1:1]) {
print(comb)
convolucion = convolve(dt_datos[iso2c==comb[1],NY.GDP.PCAP.KD] ,
dt_datos[iso2c==comb[2],NY.GDP.PCAP.KD] ,
conj = TRUE)
dt_datos.conv <- data.table(
year = num_anios,
iso2c = paste("CORR" , comb[1] , comb[2] , sep = "_"),
NY.GDP.PCAP.KD = convolucion
)
l = list(datos_grafico , dt_datos.conv)
datos_grafico <- rbindlist(l)
}
for (comb in combinatorias[1:1]) {
print(comb)
convolucion = convolve(dt_datos[iso2c==comb[1],NY.GDP.PCAP.KD] ,
dt_datos[iso2c==comb[2],NY.GDP.PCAP.KD] ,
conj = TRUE)
dt_datos.conv <- data.table(
year = year,
iso2c = paste("CORR" , comb[1] , comb[2] , sep = "_"),
NY.GDP.PCAP.KD = convolucion
)
l = list(datos_grafico , dt_datos.conv)
datos_grafico <- rbindlist(l)
}
for (comb in combinatorias[1:1]) {
print(comb)
convolucion = convolve(dt_datos_escalados[iso2c==comb[1],escalado] ,
dt_datos_escalados[iso2c==comb[2],escalado] ,
conj = TRUE)
dt_datos.conv <- data.table(
year = year,
iso2c = paste("CORR" , comb[1] , comb[2] , sep = "_"),
NY.GDP.PCAP.KD = convolucion
)
l = list(datos_grafico , dt_datos.conv)
datos_grafico <- rbindlist(l)
}
for (comb in combinatorias[1:1]) {
print(comb)
convolucion = convolve(dt_datos_escalados[iso2c==comb[1],escalado] ,
dt_datos_escalados[iso2c==comb[2],escalado] ,
conj = TRUE)
dt_datos.conv <- data.table(
year = year,
iso2c = paste("CORR" , comb[1] , comb[2] , sep = "_"),
escalado = convolucion
)
l = list(datos_grafico , dt_datos.conv)
datos_grafico <- rbindlist(l)
}
dt_datos_escalados[iso2c==comb[1],escalado]
dt_datos_escalados[iso2c==comb[2],escalado]
num_anios <- as.numeric( dt_datos_escalados[,year,by=year]$year)
num_anios
for (comb in combinatorias[1:1]) {
print(comb)
convolucion = convolve(dt_datos_escalados[iso2c==comb[1],escalado] ,
dt_datos_escalados[iso2c==comb[2],escalado] ,
conj = TRUE)
dt_datos.conv <- data.table(
year = num_anios,
iso2c = paste("CORR" , comb[1] , comb[2] , sep = "_"),
escalado = convolucion
)
l = list(datos_grafico , dt_datos.conv)
datos_grafico <- rbindlist(l)
}
datos_grafico
datos_grafico <- NULL
for (comb in combinatorias[1:1]) {
print(comb)
convolucion = convolve(dt_datos_escalados[iso2c==comb[1],escalado] ,
dt_datos_escalados[iso2c==comb[2],escalado] ,
conj = TRUE)
dt_datos.conv <- data.table(
year = num_anios,
iso2c = paste("CORR" , comb[1] , comb[2] , sep = "_"),
escalado = convolucion
)
l = list(datos_grafico , dt_datos.conv)
datos_grafico <- rbindlist(l)
}
datos_grafico <- NULL
num_anios <- as.numeric( dt_datos_escalados[,year,by=year]$year)
for (comb in combinatorias) {
print(comb)
convolucion = convolve(dt_datos_escalados[iso2c==comb[1],escalado] ,
dt_datos_escalados[iso2c==comb[2],escalado] ,
conj = TRUE)
dt_datos.conv <- data.table(
year = num_anios,
iso2c = paste("CORR" , comb[1] , comb[2] , sep = "_"),
escalado = convolucion
)
l = list(datos_grafico , dt_datos.conv)
datos_grafico <- rbindlist(l)
}
g <- ggplot(datos_grafico, aes(x = year, y = NY.GDP.PCAP.KD,dt_datos.CORR,  color = iso2c))
g +
geom_line() +
xlab('Year') +
ylab('GDI per capita (Atlas Method USD)') +
labs(title = "GNI Per Capita ($USD Atlas Method)")
g <- ggplot(datos_grafico, aes(x = year, y = escalado,dt_datos.CORR,  color = iso2c))
g +
geom_line() +
xlab('Year') +
ylab('GDI per capita (Atlas Method USD)') +
labs(title = "GNI Per Capita ($USD Atlas Method)")
datos_grafico <- NULL
for (comb in combinatorias) {
print(comb)
convolucion = convolve(dt_datos_escalados[iso2c==comb[1],value] ,
dt_datos_escalados[iso2c==comb[2],value] ,
conj = TRUE)
dt_datos.conv <- data.table(
year = num_anios,
iso2c = paste("CORR" , comb[1] , comb[2] , sep = "_"),
value = convolucion
)
l = list(datos_grafico , dt_datos.conv)
datos_grafico <- rbindlist(l)
}
g <- ggplot(datos_grafico, aes(x = year, y = value,dt_datos.CORR,  color = iso2c))
g +
geom_line() +
xlab('Year') +
ylab('GDI per capita (Atlas Method USD)') +
labs(title = "GNI Per Capita ($USD Atlas Method)")
par(mfrow=c(3,2))
for (comb in combinatorias) {
ccf(dt_datos[iso2c==comb[1],value] ,
dt_datos[iso2c==comb[2],value] ,
ylab = "cross-correlation",
main = paste ("ccf",comb[1],comb[2])
)
}
par(mfrow=c(3,2))
for (comb in combinatorias) {
ccf(dt_datos_escalados[iso2c==comb[1],value] ,
dt_datos_escalados[iso2c==comb[2],value] ,
ylab = "cross-correlation",
main = paste ("ccf",comb[1],comb[2])
)
}
for (comb in combinatorias) {
print(comb)
print( mean(ccf(dt_datos_escalados[iso2c==comb[1],value] ,
dt_datos_escalados[iso2c==comb[2],value] ,
plot=FALSE      )$acf))
}
par(mfrow=c(3,2))
for (comb in combinatorias) {
ccf(dt_datos_escalados[iso2c==comb[1],escalado] ,
dt_datos_escalados[iso2c==comb[2],escalado] ,
ylab = "cross-correlation",
main = paste ("ccf",comb[1],comb[2])
)
}
for (comb in combinatorias) {
print(comb)
print( mean(ccf(dt_datos_escalados[iso2c==comb[1],escalado] ,
dt_datos_escalados[iso2c==comb[2],escalado] ,
plot=FALSE      )$acf))
}
